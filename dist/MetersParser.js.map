{"version":3,"sources":["../src/MetersParser.js"],"names":["MetersParser","parse","meters","meter_data","meter_pair","meterElement","myVar","String","trim","length","meter","replace","parsed","parseInt","isNaN","console","log","push"],"mappings":";;;;;;AAAe,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,KAAK,CAACC,MAAD,EAAS;AAEV,UAAMC,UAAU,GAAG,EAAnB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,MAAMC,YAAX,IAA2BH,MAA3B,EAAmC;AAE/B,UAAI,OAAOG,YAAP,KAAwB,QAAxB,IAAoCC,KAAK,YAAYC,MAAzD,EAAiE;AAE7D,YAAIF,YAAY,CAACG,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClC;AACH;;AAED,cAAMC,KAAK,GAAGL,YAAY,CAACM,OAAb,CAAqB,GAArB,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAd;AAEA,cAAMC,MAAM,GAAGC,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAvB;;AAEA,YAAII,KAAK,CAACF,MAAD,CAAT,EAAmB;AACfG,UAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA;AACH;;AAEDN,QAAAA,UAAU,CAACa,IAAX,CAAgBL,MAAhB;;AAEA,YAAIR,UAAU,CAACK,MAAX,GAAoB,CAAxB,EAA2B;AACvBN,UAAAA,UAAU,CAACc,IAAX,CAAgBb,UAAhB;AACAA,UAAAA,UAAU,GAAG,EAAb;AACH;AAEJ;AACJ;;AACD,WAAOD,UAAP;AACH;;AAnC6B;;kBAAbH,Y","sourcesContent":["export default class MetersParser {\r\n\r\n    parse(meters) {\r\n\r\n        const meter_data = [];\r\n        let meter_pair = [];\r\n\r\n        for (const meterElement of meters) {\r\n\r\n            if (typeof meterElement === 'string' || myVar instanceof String) {\r\n\r\n                if (meterElement.trim().length === 0) {\r\n                    continue;\r\n                }\r\n\r\n                const meter = meterElement.replace('+', '').replace('-', '');\r\n\r\n                const parsed = parseInt(meter, 10);\r\n\r\n                if (isNaN(parsed)) {\r\n                    console.log(meter);\r\n\r\n                    continue;\r\n                }\r\n\r\n                meter_pair.push(parsed);\r\n\r\n                if (meter_pair.length > 1) {\r\n                    meter_data.push(meter_pair);\r\n                    meter_pair = [];\r\n                }\r\n\r\n            }\r\n        }\r\n        return meter_data;\r\n    }\r\n\r\n}\r\n"],"file":"MetersParser.js"}