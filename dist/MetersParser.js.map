{"version":3,"sources":["../src/MetersParser.js"],"names":["MetersParser","parse","meters","meter_data","meters_raw","split","meter_pair","meterElement","trim","length","meter","replace","parsed","parseInt","isNaN","console","log","push"],"mappings":";;;;;;AAAe,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,KAAK,CAACC,MAAD,EAAS;AAEV,UAAMC,UAAU,GAAG,EAAnB;AAEA,UAAMC,UAAU,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAnB;AAEA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,MAAMC,YAAX,IAA2BH,UAA3B,EAAuC;AAEnC,UAAGG,YAAY,CAACC,IAAb,GAAoBC,MAApB,KAA+B,CAAlC,EAAoC;AAChC;AACH;;AAED,YAAMC,KAAK,GAAGH,YAAY,CAACI,OAAb,CAAqB,GAArB,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAd;AAEA,YAAMC,MAAM,GAAGC,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAvB;;AAEA,UAAII,KAAK,CAACF,MAAD,CAAT,EAAmB;AACfG,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA;AACH;;AAEDJ,MAAAA,UAAU,CAACW,IAAX,CAAgBL,MAAhB;;AAEA,UAAGN,UAAU,CAACG,MAAX,GAAoB,CAAvB,EAAyB;AACrBN,QAAAA,UAAU,CAACc,IAAX,CAAgBX,UAAhB;AACAA,QAAAA,UAAU,GAAG,EAAb;AACH;AAEJ;;AAED,WAAOH,UAAP;AACH;;AApC6B;;kBAAbH,Y","sourcesContent":["export default class MetersParser {\r\n\r\n    parse(meters) {\r\n\r\n        const meter_data = [];\r\n\r\n        const meters_raw = meters.split(',');\r\n\r\n        let meter_pair = [];\r\n\r\n        for (const meterElement of meters_raw) {\r\n\r\n            if(meterElement.trim().length === 0){\r\n                continue;\r\n            }\r\n\r\n            const meter = meterElement.replace('+', '').replace('-', '');\r\n\r\n            const parsed = parseInt(meter, 10);\r\n\r\n            if (isNaN(parsed)) {\r\n                console.log(meter);\r\n\r\n                continue;\r\n            }\r\n\r\n            meter_pair.push(parsed);\r\n\r\n            if(meter_pair.length > 1){\r\n                meter_data.push(meter_pair);\r\n                meter_pair = [];\r\n            }\r\n\r\n        }\r\n\r\n        return meter_data;\r\n    }\r\n\r\n}"],"file":"MetersParser.js"}