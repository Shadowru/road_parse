{"version":3,"sources":["../src/converter.js"],"names":["csv","require","csvFilePath","fromFile","on","row","console","log"],"mappings":";;AAAA;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEA,MAAMC,WAAW,GAAG,wDAApB,C,CAEA;;AACAF,GAAG,GACEG,QADL,CACcD,WADd,EAEUE,EAFV,CAEa,KAFb,EAEmB,UAASC,GAAT,EAAc;AAAE;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAJV,E,CAKI;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// require csvtojson\r\nvar csv = require(\"csvtojson\");\r\n\r\nconst csvFilePath = '../dict/data-20200122T1200-structure-20200122T1200.csv'\r\n\r\n// Convert a csv file with csvtojson\r\ncsv()\r\n    .fromFile(csvFilePath)\r\n         .on(\"csv\",function(row) { // an array of csv cols like [col1, col2, col3 ...]\r\n             console.log(row);\r\n         });\r\n    // .on(\"end_parsed\",function(jsonArrayObj){ //when parse finished, result will be emitted here.\r\n    //     console.log(jsonArrayObj);\r\n    // })\r\n\r\n// // Parse large csv with stream / pipe (low mem consumption)\r\n// csv()\r\n//     .fromStream(readableStream)\r\n//     .on(\"json\",function(jsonObj){ //single json object will be emitted for each csv line\r\n//         console.log(jsonObj);\r\n//     })\r\n//\r\n// //Convert csv string to csv rows\r\n// csv()\r\n//     .fromString(csvString)\r\n//     .on(\"csv\",function(row){ // an array of csv cols like [col1, col2, col3 ...]\r\n//         console.log(row);\r\n//     })\r\n"],"file":"converter.js"}